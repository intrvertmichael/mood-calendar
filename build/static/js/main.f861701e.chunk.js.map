{"version":3,"sources":["_actions/index.js","components/Header.js","components/Month.js","components/Day.js","components/AllDays.js","components/DayClicked.js","components/ClearDayResponse.js","components/Calendar.js","components/Intro.js","components/App.js","serviceWorker.js","_reducers/calendarReducer.js","_reducers/currentReducer.js","_reducers/index.js","firebase.js","index.js"],"names":["setCurrentMonth","month","type","connect","state","name","firebase","auth","displayName","total","current","dispatch","logOut","getState","getFirebase","signOut","then","console","log","props","mood","head","className","onClick","year","m","currentMonth","length","allMonths","yearObj","Object","entries","defaultValue","onChange","document","querySelector","value","map","singleMonth","num","key","isThereAMood","days","dayOfMonth","daysLength","keys","i","setCurrentDay","day","cPos","calendarPosition","today","sDay","starts","monthDays","tags","thisMonth","Date","getMonth","isitthismonth","classList","remove","AllDays","allDays","rows","weekday","x","push","closeWindow","add","responseMessage","moodNum","setMood","updateFirestore","cleardayContainer","tellMood","getMessage","doesithavemood","isittoday","infoMessage","ratingMessage","clickedMonth","clickedDay","clearDay","setMessage","message","firestore","getFirestore","id","uid","collection","doc","set","stored","calendar","email","lastUpdateAt","catch","err","window","onclick","event","target","bigfacetags","prompt","closeResponseWindow","year2020","mood1messages","quote","author","mood2messages","mood3messages","mood4messages","Math","floor","random","fullState","calendarYear","clickedYear","userId","userCalendars","data","setCurrentAvg","addMonth","monthName","monthObj","syncReduxFirestore","obj","firestoreCalendars","fireObj","localObj","_","isEqual","y","current_date","d","getDate","getFullYear","useFirestoreConnect","useEffect","firestoreObj","allDaysArray","allDaysArrayLength","round","yearName","calendarMonth","Intro","useDispatch","login","provider","e","Boolean","location","hostname","match","initial","calendarReducer","action","dayName","newState","cloneDeep","unset","currentReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fb","rrfProps","config","createFirestoreInstance","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f861701e.chunk.js","sourcesContent":["import _ from 'lodash';\n\n// LOCAL ACTIONS\n\nexport const setCurrentMonth = (month) => {\n  return { type: 'SET_CURRENT_MONTH', month: month} ;\n}\nexport const setCurrentDay = (day) => {\n  return { type: 'SET_CURRENT_DAY', day: day};\n}\nexport const setCurrentAvg = (total) => {\n  return { type: 'SET_CURRENT_AVG', total: total};\n}\n\n\n\nexport const addMonth = (monthName, month) => {\n  return { type: 'ADD_MONTH', monthName:monthName, month:month } ;\n}\nexport const addDay = (dayName, day) => {\n  return(dispatch, getState) => {\n    const currentMonth = getState().current.month;\n    dispatch({type: 'ADD_DAY', dayName: dayName, day: day, month:currentMonth});\n  }\n}\n\n\n\nexport const clearDay = () => {\n  return (dispatch, getState) => {\n    const currentMonth = getState().current.month;\n    const currentDay = getState().current.day;\n    dispatch({ type: 'CLEAR_DAY', month:currentMonth, day:currentDay});\n  }\n}\nexport const setMood = (mood) => {\n  return (dispatch, getState) => {\n    const currentMonth = getState().current.month;\n    const currentDay = getState().current.day;\n    dispatch({ type: 'SET_MOOD', month:currentMonth, day:currentDay, mood:mood });\n  }\n}\nexport const setMessage = (message) => {\n  return (dispatch, getState) => {\n    const currentMonth = getState().current.month;\n    const currentDay = getState().current.day;\n    dispatch({ type: 'SET_MESSAGE', month:currentMonth, day:currentDay, message:message });\n  }\n}\n\n\n\n\n// FIREBASE ACTIONS\n\n// when app first starts.\nexport const syncReduxFirestore = (firestoreCalendars) => {\n  const fireObj = firestoreCalendars.year2020;\n  return (dispatch, getState) => {\n    const localObj = getState().calendar.year2020;\n    const equal = _.isEqual(localObj, fireObj);\n    // console.log('local', localObj);\n    // console.log('fire', fireObj);\n\n    if( !equal ) {\n      dispatch({type:'SYNC_REDUX_FIREBASE_CALENDARS', stored:fireObj});\n    }\n  }\n}\n\n// when a mood is clicked\nexport const updateFirestore = () => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const id = getState().firebase.auth.uid;\n\n    firestore.collection('userCalendars').doc(id).set({\n      stored: getState().calendar,\n      displayName: getState().firebase.auth.displayName,\n      email: getState().firebase.auth.email,\n      lastUpdateAt: new Date()\n    }).then(()=>{\n      // console.log('Firestore was updated');\n    }).catch( err =>{\n      console.log('Not able to update Firestore');\n      console.log(err);\n    })\n  }\n}\n\nexport const logIn = () => {\n  return(dispatch, getState, {getFirebase})=>{\n    const firebase = getFirebase();\n    firebase.login({\n      provider: 'google',\n      type: 'popup'\n    }).then((e)=>{\n      console.log('Logged in...');\n    }).catch(()=>{\n      console.log('Log in failed');\n    })\n  }\n}\n\nexport const logOut = () =>{\n  return(dispatch, getState, {getFirebase})=>{\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(()=>{\n      console.log('Signed Out...');\n    })\n  }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {logOut} from '../_actions';\n\nconst Header = (props) => {\n  let mood = props.total;\n  if(props.total === 1){ mood = 'Bad'}\n  else if(props.total === 2){ mood = 'Okay'}\n  else if(props.total === 3){ mood = 'Good'}\n  else if(props.total === 4){ mood = 'Really Good'}\n  const head = props.total ? `You've been mostly ${mood} this month` : `${props.name}'s Mood Calendar`;\n\n  return(\n    <div className='title'>\n      <div>\n        <p>{head}</p>\n        <button className='logout-btn' onClick={props.logOut}> Log Out </button>\n      </div>\n      <div className='year'>\n        <p>{props.year}</p>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state =>{\n  return {\n    name: state.firebase.auth.displayName,\n    total: state.current.total,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logOut())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {setCurrentMonth} from '../_actions';\n\nconst Month = (props) => {\n  // console.log('-> Inside of Month Component');\n\n  if(props.currentMonth.length){ // must exist to have a length\n    const allMonths = props.yearObj? Object.entries(props.yearObj): null;\n    return (\n      <div className='month'>\n        <h2>\n        {\n          allMonths.length > 1 ?\n          <select className=\"months\" defaultValue={'DEFAULT'} onChange={\n            ()=>{props.setCurrentMonth(document.querySelector('.months').value)}\n          }>\n            {allMonths.map(month => {\n              const singleMonth = month[1];\n              if( singleMonth.num !== props.currentMonth.num ){\n                return <option key={singleMonth.num} value={singleMonth.num}>{singleMonth.name}</option>;\n              }\n              else if( singleMonth.num === props.currentMonth.num ){\n                return <option key={props.currentMonth.num} value='DEFAULT'>{props.currentMonth.name}</option>;\n              }\n              else {\n                return '';\n              }\n            })\n          }\n          </select>\n          :\n          <p>{props.currentMonth.name}</p>\n        }\n        </h2>\n      </div>\n    )\n  }\n  else {\n    return <div className='month'> No month </div>\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return {\n    setCurrentMonth: (m) => dispatch(setCurrentMonth(m))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Month);\n","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {setCurrentDay} from '../_actions';\n\nconst Day = (props) => {\n  var cPos = props.calendarPosition;\n  var dayOfMonth = props.dayOfMonth;\n  const today = props.today;\n  const month = props.month;\n  var sDay = month.starts;\n  var monthDays = month.days;\n  var tags = '';\n\n  // LABEL TODAY ON CALENDAR\n  var thisMonth = new Date().getMonth();\n  var isitthismonth = month.num === thisMonth ? true : false;\n  if(isitthismonth){\n    cPos === (today + sDay - 1)? tags += 'today ' : tags += '';\n  }\n\n  // CREATE DAY JSX\n  if ((cPos>=sDay) && (cPos<(month.length + sDay))){\n    let mood = isThereAMood(monthDays, dayOfMonth);\n    tags+= `mood${mood}`;\n    return (\n      <div\n        className={`day ${tags}`}\n        key={cPos}\n        onClick={()=>{\n          if(dayOfMonth <= today || !isitthismonth)\n          {\n            props.setCurrentDay(dayOfMonth);\n            document.querySelector('.dayClicked').classList.remove('hide');\n          }\n        }}> {dayOfMonth} </div>\n      );\n  }\n  else {\n    return <div className={`notADay ${tags}`} key={cPos}>  </div>;\n  }\n}\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// CHECK DAY AND COLOR CALENDAR IF THERE IS A MOOD\nconst isThereAMood = (days, dayOfMonth) => {\n  const daysLength = Object.keys(days);\n  var mood;\n  for(var i=0; i<daysLength.length;i++){\n    if(daysLength[i] === `day${dayOfMonth}`){\n      mood = days[daysLength[i]].mood;\n    }\n  }\n  return mood;\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    setCurrentDay: (day) => dispatch(setCurrentDay(day))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Day);\n","import React from 'react';\nimport Day from './Day';\n\nconst AllDays = (props) => {\n\n    var allDays = [];\n    var rows = (props.month.starts > 4 && props.month.length>29)? 7*6 : 7*5;\n\n    // LABEL DAYS OF THE WEEK\n    const weekday = ['S', 'M', 'T', 'W', 'Th', 'F', 'S'];\n    for(var x=0;x<=6;x++){\n      allDays.push(<div key={`day${x}`} className='weekday'> {weekday[x]} </div>);\n    }\n\n    // CREATE DAYS ON CALENDAR\n    for(var i=0;i<rows;i++){\n      allDays.push(\n        <Day\n        key={i}\n        today={props.today}\n        month={props.month}\n        calendarPosition={i}\n        dayOfMonth={i - props.month.starts + 1}/>\n      );\n    }\n\n    return allDays;\n}\n\nexport default AllDays;\n","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {clearDay} from '../_actions';\nimport {setMood} from '../_actions';\nimport {setMessage} from '../_actions';\nimport {updateFirestore} from '../_actions';\n\nconst DayClicked = (props) => {\n  const month = props.month;\n  const today = props.today;\n  const clickedDay = props.clickedDay;\n\n  // CLOSE BOX WHEN CLICKED OUT\n  window.onclick = function(event) {\n    if (event.target === document.querySelector('.dayClicked')) { closeWindow() }\n  }\n\n  const isittoday = today === clickedDay ? true: false;\n  let doesithavemood = false;\n\n  let mood = '';\n  let bigfacetags=``;\n  let message;\n\n  if( month.days[`day${clickedDay}`]){\n    doesithavemood = true;\n    mood = tellMood(month.days[`day${clickedDay}`].mood);\n    bigfacetags = `big-circle mood${month.days[`day${clickedDay}`].mood}`;\n    message = month.days[`day${clickedDay}`].message?month.days[`day${clickedDay}`].message:'Why? ';\n  }\n\n\n  // CREATE MESSAGES\n  let [infoMessage, ratingMessage] = getMessage(doesithavemood, isittoday, month.name, clickedDay, mood);\n\n  return (\n    <div className='dayClicked hide'>\n      <div className='dayInfo'>\n        <span className='close' onClick={closeWindow}> x </span>\n        <div className='info-window'>\n          <p> {infoMessage} </p>\n          <div className={`${bigfacetags}`} onClick={()=>{\n            var m = prompt(`Why were you feeling that way?`);\n            props.setMessage(m);\n            props.updateFirestore();\n            }\n          }> {message} </div>\n        </div>\n\n        <div className='rating'>\n          <p> {ratingMessage}</p>\n\n          <div className = 'rating-circles'>\n\n            <div className='circle-container'>\n              <div className='circle mood1' onClick={()=>responseMessage(props, 1)}>\n              </div>\n              <p>Bad</p>\n            </div>\n\n            <div className='circle-container'>\n              <div className='circle mood2' onClick={()=>responseMessage(props, 2)}>\n              </div>\n              <p>Okay</p>\n            </div>\n\n            <div className='circle-container'>\n              <div className='circle mood3' onClick={()=>responseMessage(props, 3)}>\n              </div>\n              <p>GOOD</p>\n            </div>\n\n            <div className='circle-container'>\n              <div className='circle mood4' onClick={()=>responseMessage(props, 4)}>\n              </div>\n              <p>REALLY GOOD</p>\n            </div>\n          </div>\n\n          {doesithavemood? <button className='clearDay' onClick={()=>{\n            props.clearDay();\n            props.updateFirestore();\n          }}> Clear Day </button>: ''}\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n// HELPER FUNCTIONS\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst closeWindow =() => {\n  document.querySelector('.dayClicked').classList.add('hide');\n}\n\nconst responseMessage = (props, moodNum) => {\n  props.setMood(moodNum);\n  props.updateFirestore();\n\n  const cleardayContainer = document.querySelector('.ClearDayResponse');\n  cleardayContainer.classList.add(`mood${moodNum}`);\n  cleardayContainer.classList.remove('hide');\n  \n  // setTimeout(()=>{\n  //   cleardayContainer.classList.remove(`mood${moodNum}`);\n  //   cleardayContainer.classList.add('hide');\n  // }, 10000)\n}\n\nconst tellMood = (mood) => {\n  if(mood === 1){\n    return('BAD');\n  }\n  else if(mood === 2){\n    return('OKAY');\n  }\n  else if(mood === 3){\n    return('GOOD');\n  }\n  else if(mood === 4){\n    return('REALLY GOOD');\n  }\n  else {\n    // return 'I have not put a feeling for this day.'\n  }\n}\n\nconst getMessage = (doesithavemood, isittoday, month, day, mood) => {\n  let infoMessage = '';\n  let ratingMessage = '';\n\n  if(doesithavemood && !isittoday){\n    infoMessage = `On ${month} ${day} you were feeling ${mood}` ;\n    ratingMessage = 'If not, how were you really feeling?';\n  }\n  else if(!doesithavemood && !isittoday) {\n    infoMessage = `You don't have a mood for ${month} ${day}` ;\n    ratingMessage = `How were you feeling? `;\n  }\n  else if(doesithavemood && isittoday){\n    infoMessage = `Seems like you're feeling ${mood} today` ;\n    ratingMessage = 'Did you change your mind ?';\n  }\n  else if(!doesithavemood && isittoday){\n    infoMessage = `Seems like you don't have a mood for today` ;\n    ratingMessage = 'Would you like to add one ?';\n  }\n  else {\n    infoMessage = '';\n    ratingMessage = '';\n  }\n\n  return [infoMessage, ratingMessage];\n}\n\n\n// MAP\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst mapStateToProps = state => {\n  return {\n    clickedMonth: state.current.month,\n    clickedDay: state.current.day\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearDay: () => dispatch(clearDay()),\n    setMood: (mood) => dispatch(setMood(mood)),\n    setMessage: (message) => dispatch(setMessage(message)),\n    updateFirestore: ()=> dispatch(updateFirestore())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayClicked);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nconst ClearDayResponse = props => {\n  const mood = props.calendar[`month${props.month}`].days[`day${props.day}`]? props.calendar[`month${props.month}`].days[`day${props.day}`].mood : null;\n\n  // MOOD 1 _ BAD\n  const mood1messages = [\n    {\n      quote:\"You may encounter many defeats, but you must not be defeated. In fact, it may be necessary to encounter the defeats, so you can know who you are, what you can rise from, how you can still come out of it.\",\n      author:\"Maya Angelou\"\n    },\n    {\n      quote:\"You don't develop courage by being happy in your relationships everyday. You develop it by surviving difficult times and challenging adversity.\",\n      author:\"Epicurus\"\n    },\n    {\n      quote:\"Most of the important things in the world have been accomplished by people who have kept on trying when there seemed to be no hope at all.\",\n      author:\"Dale Carnegie\"\n    },\n    {\n      quote:\"Our greatest glory is not in never falling, but in rising every time we fall.\",\n      author:\"Confucius\"\n    },\n    {\n      quote:\"A person who never made a mistake never tried anything new.\",\n      author:\"Albert Einstein\"\n    }\n  ];\n\n  // MOOD 2 _ OKAY\n  const mood2messages = [\n    {\n      quote:\"Most of the important things in the world have been accomplished by people who have kept on trying when there seemed to be no hope at all.\",\n      author:\"Dale Carnegie\"\n    },\n    {\n      quote:\"Experiencing sadness and anger can make you feel more creative, and by being creative, you can get beyond your pain or negativity.\",\n      author:\"Yoko Ono\"\n    },\n    {\n      quote:\"With the new day comes new strength and new thoughts.\",\n      author:\"Eleanor Roosevelt\"\n    },\n    {\n      quote:\"We all have self-doubt. You don't deny it, but you also don't capitulate to it. You embrace it.\",\n      author:\"Kobe Bryant\"\n    },\n    {\n      quote:\"Sometimes when you innovate, you make mistakes. It is best to admit them quickly, and get on with improving your other innovations.\",\n      author:\"Steve Jobs\"\n    },\n    {\n      quote:\"Be content with what you have; rejoice in the way things are. When you realize there is nothing lacking, the whole world belongs to you.\",\n      author:\"Lao Tzu\"\n    }\n\n  ];\n\n  // MOOD 3 _ GOOD\n  const mood3messages = [\n    {\n      quote:\"Do you want to know who you are? Don't ask. Act! Action will delineate and define you.\",\n      author:\"Thomas Jefferson\"\n    },\n    {\n      quote:\"The pessimist sees difficulty in every opportunity. The optimist sees the opportunity in every difficulty.\",\n      author:\"Winston Churchill\"\n    },\n    {\n      quote:\"Kindness in words creates confidence. Kindness in thinking creates profoundness. Kindness in giving creates love.\",\n      author:\"Lao Tzu\"\n    },\n    {\n      quote:\"Every man's life ends the same way. It is only the details of how he lived and how he died that distinguish one man from another.\",\n      author:\"Ernest Hemingway\"\n    },\n    {\n      quote:\"I think that's the single best piece of advice: constantly think about how you could be doing things better and questioning yourself.\",\n      author:\"Elon Musk\"\n    }\n  ];\n\n  // MOOD 4 _ REALLY GOOD\n  const mood4messages = [\n    {\n      quote:\"The most important thing is to try and inspire people so that they can be great in whatever they want to do.\",\n      author:\"Kobe Bryant\"\n    },\n    {\n      quote:\"Thousands of candles can be lit from a single candle, and the life of the candle will not be shortened. Happiness never decreases by being shared.\",\n      author:\"Buddha\"\n    },\n    {\n      quote:\"However many holy words you read, however many you speak, what good will they do you if you do not act on upon them?\",\n      author:\"Buddha\"\n    },\n    {\n      quote:\"Only those who have learned the power of sincere and selfless contribution experience life's deepest joy: true fulfillment\",\n      author:\"Tony Robbins\"\n    }\n  ];\n\n  const m = [\n    mood1messages[Math.floor(Math.random() * mood1messages.length)],\n    mood2messages[Math.floor(Math.random() * mood2messages.length)],\n    mood3messages[Math.floor(Math.random() * mood3messages.length)],\n    mood4messages[Math.floor(Math.random() * mood4messages.length)]\n  ];\n\n  const quote = m[mood-1]? m[mood-1].quote: '';\n  const author = m[mood-1]? m[mood-1].author: '';\n\n  return (\n    <div className='ClearDayResponse hide' onClick={()=>closeResponseWindow(mood)}>\n      <div className='ClearDayResponseBox'>\n        <p className='closeResponse' onClick={()=>closeResponseWindow(mood)}>X</p>\n        <p className='quote'>{quote}</p>\n        <p className='author'>- {author}</p>\n      </div>\n    </div>\n  );\n}\n\nconst closeResponseWindow = mood =>{\n  document.querySelector('.ClearDayResponse').classList.add('hide')\n  document.querySelector('.ClearDayResponse').classList.remove(`mood${mood}`);\n}\n\nconst mapStateToProps = state => {\n  return {\n    calendar: state.calendar.year2020,\n    month: state.current.month,\n    day: state.current.day\n  }\n}\n\nexport default connect(mapStateToProps)(ClearDayResponse);\n","import React from 'react';\n\nimport Header from './Header';\nimport Month from './Month';\nimport AllDays from './AllDays';\nimport DayClicked from './DayClicked';\nimport ClearDayResponse from './ClearDayResponse';\n\nimport _ from 'lodash';\nimport '../style/Calendar.css';\nimport '../style/Day.css';\nimport '../style/DayClicked.css';\nimport '../style/Moods.css';\n\nimport {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport {setCurrentAvg} from '../_actions';\nimport {setCurrentMonth} from '../_actions';\nimport {addMonth} from '../_actions';\nimport {syncReduxFirestore} from '../_actions';\n\nimport { useFirestoreConnect } from 'react-redux-firebase';\n\nconst Calendar = props => {\n\n\n  const current_date = new Date();\n  const d = current_date.getDate();\n  let m;\n  let y;\n\n  if(!props.clickedMonth){\n    // FIRST TIME THE APP RUNS\n    m = current_date.getMonth();\n    y = current_date.getFullYear();\n\n    if(!props.calendarYear[`month${m}`]){\n      // if month doesn't exist, make it.\n      const allMonths2020 = [\n        { num:0,  name:'January',   length:31, starts:3, days:{} } ,\n        { num:1,  name:'February',  length:28, starts:6, days:{} } ,\n        { num:2,  name:'March',     length:31, starts:0, days:{} } ,\n        { num:3,  name:'April',     length:30, starts:3, days:{} } ,\n        { num:4,  name:'May',       length:31, starts:5, days:{} } ,\n        { num:5,  name:'June',      length:30, starts:1, days:{} } ,\n        { num:6,  name:'July',      length:31, starts:3, days:{} } ,\n        { num:7,  name:'August',    length:31, starts:6, days:{} } ,\n        { num:8,  name:'September', length:30, starts:2, days:{} } ,\n        { num:9,  name:'October',   length:31, starts:4, days:{} } ,\n        { num:10, name:'November',  length:30, starts:0, days:{} } ,\n        { num:11, name:'December',  length:31, starts:2, days:{} }\n      ];\n      console.log(`Month${m} doesn't exist...`);\n      props.addMonth(`month${m}`, allMonths2020[m]);\n      console.log(`Month${m} was created...`);\n    }\n\n    props.setCurrentMonth(m);\n  } else {\n    m = props.clickedMonth;\n    y = props.clickedYear;\n  }\n\n  const blankMonth = { num:null, name:null, length:null, starts:null, days:[] };\n  const month = props.calendarYear[`month${m}`]? props.calendarYear[`month${m}`]: blankMonth;\n\n  useFirestoreConnect(`userCalendars`);\n  useEffect( () => {\n    let firestoreObj = null;\n    if(props.userCalendars){\n      if(props.userCalendars[props.userId]){\n        if(props.userCalendars[props.userId].stored){\n          firestoreObj = props.userCalendars[props.userId].stored;\n        }\n      }\n    }\n\n    // average mood\n    if(firestoreObj !== null){\n      let total = 0;\n      const allDays = firestoreObj.year2020[`month${m}`].days;\n      const allDaysArray = Object.entries(allDays);\n      const allDaysArrayLength = allDaysArray.length;\n\n      for(let m=0 ; m< allDaysArrayLength ; m++ ){\n        total += allDaysArray[m][1].mood;\n      }\n\n      total = Math.round(total/allDaysArrayLength);\n\n      if(props.total !== total){\n        props.setCurrentAvg(total);\n      }\n    }\n\n    if(firestoreObj && !_.isEqual(firestoreObj, props.calendarYear) ) {\n      props.syncReduxFirestore(firestoreObj);\n    }\n  });\n\n  return (\n    <div className='calender-container'>\n\n      <Header year={y}/>\n      <Month\n        yearName={props.clickedYear}\n        yearObj={props.calendarYear}\n        currentMonth={props.calendarMonth?props.calendarMonth:month}\n      />\n\n      <div className='calender'>\n        <AllDays month={month} today={d}/>\n      </div>\n\n      <DayClicked month={month} today={d}/>\n      <ClearDayResponse />\n    </div>\n  );\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(`Component State:`, state);\n  // console.log('- - - - - - - - - - - - - - - -');\n\n  return {\n    fullState: state,\n    calendar: state.calendar,\n    calendarYear: state.calendar.year2020,\n    clickedYear: state.current.year,\n    clickedMonth: state.current.month,\n    clickedDay: state.current.day,\n    total: state.current.total,\n    userId: state.firebase.auth.uid,\n    userCalendars: state.firestore.data.userCalendars\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentAvg: total => dispatch(setCurrentAvg(total)),\n    addMonth: (monthName, monthObj) => dispatch( addMonth(monthName, monthObj) ),\n    setCurrentMonth: month => dispatch(setCurrentMonth(month)),\n    syncReduxFirestore: obj => dispatch(syncReduxFirestore(obj))\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calendar);\n","import React from 'react';\nimport GoogleButton from 'react-google-button'\nimport {useDispatch} from 'react-redux';\nimport {logIn} from '../_actions';\n\nconst Intro = () => {\n  const dispatch = useDispatch();\n\n  return(\n    <div className='intro'>\n      <h1>Mood Calendar</h1>\n      <p>Keep track of your mood. Some kind of description goes here.</p>\n      <div className='gbutton'>\n        <GoogleButton type=\"dark\" onClick={()=>dispatch(logIn())} />\n      </div>\n    </div>\n  )\n}\n\nexport default Intro;\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Calendar from './Calendar';\nimport Intro from './Intro';\n\nconst App = (props) => {\n  const {auth} = props;\n\n  return(\n    <div className='container'>\n      {auth.uid? <Calendar /> : <Intro />}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport _ from 'lodash';\n\n// REDUCER\nconst initial = {\n  year2020:{\n    // month0:{ num:0, name:'January', length:31, starts:3, days:{day1:{mood:1}, day2:{mood:2}, day3:{mood:3}, day4:{mood:4}}},\n    // month2:{ num:2, name:'March', length:31, starts:0, days:{day11:{mood:1}, day12:{mood:2}, day13:{mood:3}, day14:{mood:4}} }\n  }\n}\n\nconst calendarReducer = ( state = initial, action) => {\n  switch(action.type) {\n\n    // stored\n    case 'SYNC_REDUX_FIREBASE_CALENDARS':\n      return {\n        ...state,\n        [`year2020`]:{\n          ...state['year2020'],\n          ...action.stored\n        }\n      }\n\n    // monthName, month\n    case 'ADD_MONTH':\n      return {\n        ...state,\n        [`year2020`]:{\n          ...state[`year2020`],\n          [action.monthName] : action.month\n        }\n      }\n\n    // dayNamw, day, month\n    case 'ADD_DAY':\n      return {\n        ...state,\n        [`year2020`]:{\n          ...state[`year2020`],\n          [`month${action.month}`]:{\n            ...state[`year2020`][`month${action.month}`],\n            days:{\n              ...state[`year2020`][`month${action.month}`].days,\n              [action.dayName]:action.day\n            }\n          }\n        }\n      }\n\n    // month, day, mood\n    case 'SET_MOOD':\n      return {\n        ...state,\n        [`year2020`]:{\n          ...state[`year2020`],\n          [`month${action.month}`]:{\n            ...state[`year2020`][`month${action.month}`],\n            days : {\n                ...state[`year2020`][`month${action.month}`].days,\n                [`day${action.day}`]:{\n                  ...state[`year2020`][`month${action.month}`].days[`day${action.day}`],\n                  mood:action.mood\n                }\n            }\n          }\n        }\n      }\n\n    // month, day, message\n    case 'SET_MESSAGE':\n      return {\n        ...state,\n        [`year2020`]:{\n          ...state[`year2020`],\n          [`month${action.month}`]:{\n            ...state[`year2020`][`month${action.month}`],\n            days : {\n                ...state[`year2020`][`month${action.month}`].days,\n                [`day${action.day}`]:{\n                  ...state[`year2020`][`month${action.month}`].days[`day${action.day}`],\n                  message:action.message\n                }\n            }\n          }\n        }\n      }\n\n    case 'CLEAR_DAY':\n      const newState = _.cloneDeep(state);\n      _.unset(newState, `year2020.month${action.month}.days.day${action.day}`);\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport default calendarReducer;\n","\n\nconst current = {\n  year: 2020,\n  month: null,\n  day: null,\n  total: null\n}\n\nconst currentReducer = ( state=current, action ) => {\n  switch (action.type) {\n    case 'SET_CURRENT':\n      return { ...state, year:action.year, month: action.month, day: action.day, mood: action.mood, message: action.message };\n\n    case 'SET_CURRENT_MONTH':\n      return { ...state, month:action.month};\n\n    case 'SET_CURRENT_DAY':\n      return { ...state, day:action.day};\n\n    case 'SET_CURRENT_AVG':\n      return { ...state, total:action.total};\n\n    default:\n      return state;\n  }\n}\n\nexport default currentReducer;\n","\n\nimport { combineReducers } from 'redux';\n\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nimport calendarReducer from './calendarReducer';\nimport currentReducer from './currentReducer';\n\n\nexport default combineReducers({\n  current: currentReducer,\n  calendar: calendarReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n","// FIREBASE\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// FIREBASE\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: \"mood-calendar-91494.firebaseapp.com\",\n  databaseURL: \"https://mood-calendar-91494.firebaseio.com\",\n  projectId: \"mood-calendar-91494\",\n  storageBucket: \"mood-calendar-91494.appspot.com\",\n  messagingSenderId: \"1040700958396\",\n  appId: \"1:1040700958396:web:4f2829334b1152a736d2b9\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n// REDUX\nimport {Provider} from 'react-redux';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport reducer from './_reducers';\n\n// FIREBASE\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from 'redux-firestore';\nimport {ReactReduxFirebaseProvider, getFirebase} from 'react-redux-firebase';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport fb from './firebase';\n\nimport thunk from 'redux-thunk';\n\n// STORE\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer,\n  composeEnhancers(\n    applyMiddleware( thunk.withExtraArgument({ getFirestore, getFirebase }) ),\n    reduxFirestore(firebase, fb)\n  )\n);\n\n\n// REACT REDUX FIREBASE OPTIONS\nconst rrfProps = {\n  firebase,\n  config: fb,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}